using System;using UnityEngine;public class ProjectileWeapon : MonoBehaviour {	// Time before reshooting/casting/activating	[SerializeField]	private float rechargeTime = 1.0f;	private SteamVR_TrackedController controller;    // Set when we fire. next time we can fire	private float nextFireTime = 0.0f;    // event that objects subscribe to when we fire.	public event Action OnFire = delegate { };	protected void Awake() {		controller = GetComponentInParent<SteamVR_TrackedController>();	}	protected void Update() {		if ( CanFire() && ShouldFire() ) {			Fire();		}	}	/// <summary>	/// Should fire if we have trigger pressed	/// </summary>	/// <returns><c>true</c>, if fire was shoulded, <c>false</c> otherwise.</returns>	private bool ShouldFire() {		return controller.triggerPressed;	}	/// <summary>	/// True if we met our timer requirement	/// </summary>	/// <returns><c>true</c>, if fire was caned, <c>false</c> otherwise.</returns>	private bool CanFire() {		return Time.time >= nextFireTime;	}    /// <summary>
    /// Fire; don't do anything in particular but tell everything else that we're firing
    /// </summary>	private void Fire() {		OnFire();		nextFireTime = Time.time + rechargeTime;	}}